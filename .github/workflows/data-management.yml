name: 🗂️ Data Branch Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'generate_exports'
        type: choice
        options:
        - generate_exports
        - clear_all_data
        - backup_data
        - generate_statistics
      
      confirm_deletion:
        description: 'Type "DELETE ALL DATA" to confirm deletion (only for clear_all_data)'
        required: false
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  data-management:
    runs-on: ubuntu-latest
    if: github.actor == 'plankl' # Only repository owner can run this
    
    steps:
    - name: 🔍 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 🌿 Setup Data Branch
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        
        # Check if data branch exists, create if not
        if ! git show-ref --verify --quiet refs/remotes/origin/data; then
          echo "Creating data branch..."
          git checkout --orphan data
          mkdir -p data/{members,exports,logs,backups}
          echo "# 🚒 Feuerwehr Hamberg - Data Branch" > README.md
          echo "This branch contains member data and automated exports." >> README.md
          git add .
          git commit -m "🚀 Initialize data branch"
          git push origin data
        else
          echo "Data branch exists, checking out..."
          git checkout data
        fi

    - name: 🧹 Clear All Data
      if: inputs.action == 'clear_all_data' && inputs.confirm_deletion == 'DELETE ALL DATA'
      run: |
        echo "🚨 CLEARING ALL MEMBER DATA..."
        
        # Remove all member files
        rm -rf data/members/*
        
        # Clear exports
        rm -rf data/exports/*
        
        # Clear logs (keep structure)
        find data/logs -name "*.log" -delete
        
        # Create deletion log
        echo "$(date -u +%Y-%m-%dT%H:%M:%SZ) - All data cleared by ${{ github.actor }}" >> data/logs/deletion-history.log
        
        # Recreate directory structure
        mkdir -p data/{members,exports,logs,backups}
        echo "# Members data files" > data/members/README.md
        echo "# Automated exports" > data/exports/README.md
        echo "# Processing logs" > data/logs/README.md
        
        git add .
        git commit -m "🗑️ CLEAR ALL DATA - Requested by ${{ github.actor }}" || echo "No changes to commit"
        git push origin data

    - name: 📊 Generate Exports and Statistics
      if: inputs.action == 'generate_exports' || inputs.action == 'generate_statistics'
      run: |
        echo "📊 Generating comprehensive exports and statistics..."
        
        # Create exports directory
        mkdir -p data/exports
        
        # Count member files
        MEMBER_COUNT=$(find data/members -name "*.json" | wc -l)
        echo "Found $MEMBER_COUNT member files"
        
        if [ $MEMBER_COUNT -eq 0 ]; then
          echo "No member data found. Creating empty exports..."
          
          # Empty JSON export
          cat > data/exports/all_members.json << 'EOF'
        {
          "generated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "total": 0,
          "applications": [],
          "statistics": {
            "total": 0,
            "with_mta": 0,
            "with_25_years": 0,
            "with_40_years": 0,
            "qualified": 0
          }
        }
        EOF
          
          # Empty CSV export
          echo "ID,Timestamp,Nachname,Vorname,Geburtsdatum,Email,Telefon,Straße,Hausnummer,PLZ,Ort,MTA,25Jahre,40Jahre,Status" > data/exports/all_members.csv
          
          # Empty HTML
          cat > data/exports/overview.html << 'EOF'
        <!DOCTYPE html>
        <html lang="de">
        <head>
            <meta charset="UTF-8">
            <title>🚒 Feuerwehr Hamberg - Keine Daten</title>
            <style>body{font-family:Inter,sans-serif;text-align:center;padding:50px;}</style>
        </head>
        <body>
            <h1>🚒 Feuerwehr Hamberg</h1>
            <h2>Keine Mitgliederdaten vorhanden</h2>
            <p>Generiert am: $(date)</p>
        </body>
        </html>
        EOF
        
        else
          # Process member files and generate comprehensive exports
          node << 'EOF'
        const fs = require('fs');
        const path = require('path');
        
        // Read all member JSON files
        const memberFiles = fs.readdirSync('data/members')
          .filter(file => file.endsWith('.json'))
          .map(file => {
            try {
              const content = fs.readFileSync(path.join('data/members', file), 'utf8');
              return JSON.parse(content);
            } catch (error) {
              console.warn(`Failed to parse ${file}:`, error.message);
              return null;
            }
          })
          .filter(Boolean);
        
        console.log(`Processing ${memberFiles.length} member records...`);
        
        // Calculate statistics
        const stats = {
          total: memberFiles.length,
          with_mta: memberFiles.filter(m => m.qualifikationen?.mta_absolviert).length,
          with_25_years: memberFiles.filter(m => m.qualifikationen?.dienstjahre_25).length,
          with_40_years: memberFiles.filter(m => m.qualifikationen?.dienstjahre_40).length,
          qualified: memberFiles.filter(m => 
            m.qualifikationen?.mta_absolviert || 
            m.qualifikationen?.dienstjahre_25 || 
            m.qualifikationen?.dienstjahre_40
          ).length
        };
        
        // Generate comprehensive JSON export
        const jsonExport = {
          generated: new Date().toISOString(),
          total: memberFiles.length,
          statistics: stats,
          applications: memberFiles.map((app, index) => ({
            ...app,
            id: `FF_HAM_${new Date(app.timestamp).toISOString().slice(0,10).replace(/-/g,'')}_${app.person.nachname}_${app.person.vorname}`.toLowerCase().replace(/[^a-z0-9_]/g, ''),
            qualification_summary: [
              app.qualifikationen?.mta_absolviert ? 'MTA' : null,
              app.qualifikationen?.dienstjahre_25 ? '25Jahre' : null,
              app.qualifikationen?.dienstjahre_40 ? '40Jahre' : null
            ].filter(Boolean).join(', ') || 'Keine'
          }))
        };
        
        fs.writeFileSync('data/exports/all_members.json', JSON.stringify(jsonExport, null, 2));
        
        // Generate CSV export
        const csvHeaders = ['ID', 'Timestamp', 'Nachname', 'Vorname', 'Geburtsdatum', 'Email', 'Telefon', 'Straße', 'Hausnummer', 'PLZ', 'Ort', 'MTA', '25Jahre', '40Jahre', 'Status'];
        const csvRows = memberFiles.map(app => [
          `FF_HAM_${new Date(app.timestamp).toISOString().slice(0,10).replace(/-/g,'')}_${app.person.nachname}_${app.person.vorname}`.toLowerCase().replace(/[^a-z0-9_]/g, ''),
          app.timestamp,
          app.person.nachname || '',
          app.person.vorname || '',
          app.person.geburtsdatum || '',
          app.person.email || '',
          app.person.telefon || '',
          app.adresse.strasse || '',
          app.adresse.hausnummer || '',
          app.adresse.plz || '',
          app.adresse.ort || '',
          app.qualifikationen?.mta_absolviert ? 'Ja' : 'Nein',
          app.qualifikationen?.dienstjahre_25 ? 'Ja' : 'Nein',
          app.qualifikationen?.dienstjahre_40 ? 'Ja' : 'Nein',
          (app.qualifikationen?.mta_absolviert || app.qualifikationen?.dienstjahre_25 || app.qualifikationen?.dienstjahre_40) ? 'Berechtigt' : 'Nicht berechtigt'
        ]);
        
        const csvContent = [csvHeaders, ...csvRows]
          .map(row => row.map(cell => `"${cell}"`).join(','))
          .join('\n');
        
        fs.writeFileSync('data/exports/all_members.csv', csvContent);
        
        // Generate comprehensive HTML report
        const html = `<!DOCTYPE html>
        <html lang="de">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>🚒 Feuerwehr Hamberg - Mitgliederübersicht</title>
            <style>
                body { font-family: Inter, sans-serif; margin: 0; background: #f8fafc; }
                .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #e53e3e, #c53030); color: white; padding: 30px; border-radius: 12px; margin-bottom: 30px; text-align: center; }
                .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 30px; }
                .stat-card { background: white; padding: 25px; border-radius: 12px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); text-align: center; }
                .stat-number { font-size: 2.5em; font-weight: bold; color: #e53e3e; margin-bottom: 5px; }
                .stat-label { color: #666; font-weight: 500; }
                .table-container { background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
                table { width: 100%; border-collapse: collapse; }
                th, td { padding: 15px; text-align: left; border-bottom: 1px solid #e2e8f0; }
                th { background: #f8fafc; font-weight: 600; color: #2d3748; }
                tr:hover { background: #f7fafc; }
                .badge { display: inline-block; padding: 4px 12px; border-radius: 20px; font-size: 0.85em; font-weight: 500; margin: 2px; }
                .badge-success { background: #c6f6d5; color: #22543d; }
                .badge-warning { background: #fef5e7; color: #c05621; }
                .footer { margin-top: 30px; text-align: center; color: #666; }
                .export-links { text-align: center; margin: 20px 0; }
                .export-links a { display: inline-block; margin: 0 10px; padding: 10px 20px; background: #e53e3e; color: white; text-decoration: none; border-radius: 8px; }
                @media (max-width: 768px) { .stats-grid { grid-template-columns: 1fr; } table { font-size: 0.9em; } }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>🚒 Feuerwehr Hamberg</h1>
                    <h2>Mitglieder-Dashboard</h2>
                    <p>Automatisch generiert am ${new Date().toLocaleString('de-DE')}</p>
                </div>
                
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-number">${stats.total}</div>
                        <div class="stat-label">Gesamte Anmeldungen</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">${stats.with_mta}</div>
                        <div class="stat-label">MTA absolviert</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">${stats.with_25_years}</div>
                        <div class="stat-label">25 Jahre Dienst</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">${stats.with_40_years}</div>
                        <div class="stat-label">40 Jahre Dienst</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">${stats.qualified}</div>
                        <div class="stat-label">Berechtigt für Ehrenamtskarte</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">${Math.round((stats.qualified/stats.total)*100)}%</div>
                        <div class="stat-label">Berechtigungsquote</div>
                    </div>
                </div>
                
                <div class="export-links">
                    <a href="all_members.json" download>📄 JSON Download</a>
                    <a href="all_members.csv" download>📊 CSV Download</a>
                    <a href="detailed_statistics.json" download>📈 Statistiken</a>
                </div>
                
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Geburtsdatum</th>
                                <th>Kontakt</th>
                                <th>Adresse</th>
                                <th>Qualifikationen</th>
                                <th>Status</th>
                                <th>Anmeldung</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${memberFiles.map(app => `
                                <tr>
                                    <td><strong>${app.person.nachname}, ${app.person.vorname}</strong></td>
                                    <td>${app.person.geburtsdatum}</td>
                                    <td>
                                        ${app.person.email}<br>
                                        <small>${app.person.telefon}</small>
                                    </td>
                                    <td>
                                        ${app.adresse.strasse} ${app.adresse.hausnummer}<br>
                                        <small>${app.adresse.plz} ${app.adresse.ort}</small>
                                    </td>
                                    <td>
                                        ${app.qualifikationen?.mta_absolviert ? '<span class="badge badge-success">MTA</span>' : ''}
                                        ${app.qualifikationen?.dienstjahre_25 ? '<span class="badge badge-success">25J</span>' : ''}
                                        ${app.qualifikationen?.dienstjahre_40 ? '<span class="badge badge-success">40J</span>' : ''}
                                        ${!app.qualifikationen?.mta_absolviert && !app.qualifikationen?.dienstjahre_25 && !app.qualifikationen?.dienstjahre_40 ? 
                                          '<span class="badge badge-warning">Keine</span>' : ''}
                                    </td>
                                    <td>
                                        ${(app.qualifikationen?.mta_absolviert || app.qualifikationen?.dienstjahre_25 || app.qualifikationen?.dienstjahre_40) ? 
                                          '<span class="badge badge-success">Berechtigt</span>' : 
                                          '<span class="badge badge-warning">Nicht berechtigt</span>'}
                                    </td>
                                    <td><small>${new Date(app.timestamp).toLocaleString('de-DE')}</small></td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
                
                <div class="footer">
                    <p>🔒 <strong>Vertraulich</strong> - Nur für interne Verwendung der Feuerwehr Hamberg</p>
                    <p>Automatisch generiert durch GitHub Actions</p>
                    <p>Letzte Aktualisierung: ${new Date().toLocaleString('de-DE')}</p>
                </div>
            </div>
        </body>
        </html>`;
        
        fs.writeFileSync('data/exports/overview.html', html);
        
        // Generate detailed statistics JSON
        const detailedStats = {
          generated: new Date().toISOString(),
          summary: stats,
          breakdown: {
            age_distribution: {},
            location_distribution: {},
            qualification_combinations: {},
            monthly_registrations: {}
          },
          members: memberFiles.map(app => ({
            id: `FF_HAM_${new Date(app.timestamp).toISOString().slice(0,10).replace(/-/g,'')}_${app.person.nachname}_${app.person.vorname}`.toLowerCase().replace(/[^a-z0-9_]/g, ''),
            name: `${app.person.vorname} ${app.person.nachname}`,
            age: new Date().getFullYear() - new Date(app.person.geburtsdatum).getFullYear(),
            location: `${app.adresse.plz} ${app.adresse.ort}`,
            qualifications: [
              app.qualifikationen?.mta_absolviert ? 'MTA' : null,
              app.qualifikationen?.dienstjahre_25 ? '25Jahre' : null,
              app.qualifikationen?.dienstjahre_40 ? '40Jahre' : null
            ].filter(Boolean),
            eligible: app.qualifikationen?.mta_absolviert || app.qualifikationen?.dienstjahre_25 || app.qualifikationen?.dienstjahre_40,
            registration_date: app.timestamp
          }))
        };
        
        fs.writeFileSync('data/exports/detailed_statistics.json', JSON.stringify(detailedStats, null, 2));
        
        console.log('✅ All exports generated successfully!');
        EOF
        fi

    - name: 💾 Backup Data
      if: inputs.action == 'backup_data'
      run: |
        echo "💾 Creating data backup..."
        
        BACKUP_DATE=$(date -u +%Y%m%d_%H%M%S)
        BACKUP_DIR="data/backups/backup_$BACKUP_DATE"
        
        mkdir -p "$BACKUP_DIR"
        
        # Copy all member data
        if [ -d "data/members" ] && [ "$(ls -A data/members)" ]; then
          cp -r data/members "$BACKUP_DIR/"
          MEMBER_COUNT=$(find data/members -name "*.json" | wc -l)
          echo "Backed up $MEMBER_COUNT member files"
        fi
        
        # Copy current exports
        if [ -d "data/exports" ] && [ "$(ls -A data/exports)" ]; then
          cp -r data/exports "$BACKUP_DIR/"
        fi
        
        # Create backup manifest
        cat > "$BACKUP_DIR/manifest.json" << EOF
        {
          "backup_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "created_by": "${{ github.actor }}",
          "member_count": $MEMBER_COUNT,
          "backup_type": "manual",
          "repository": "${{ github.repository }}"
        }
        EOF
        
        echo "✅ Backup created: $BACKUP_DIR"

    - name: 📝 Update Processing Log
      run: |
        mkdir -p data/logs
        
        LOG_FILE="data/logs/actions-$(date -u +%Y-%m-%d).log"
        echo "$(date -u +%Y-%m-%dT%H:%M:%SZ) - Action: ${{ inputs.action }} - User: ${{ github.actor }} - Status: Success" >> "$LOG_FILE"

    - name: 🚀 Commit and Push Changes
      run: |
        git add .
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          case "${{ inputs.action }}" in
            "generate_exports")
              git commit -m "📊 Auto-generate exports and statistics - $(date -u +%Y-%m-%d)"
              ;;
            "clear_all_data")
              git commit -m "🗑️ CLEAR ALL DATA - Confirmed by ${{ github.actor }}"
              ;;
            "backup_data")
              git commit -m "💾 Create data backup - $(date -u +%Y-%m-%d)"
              ;;
            "generate_statistics")
              git commit -m "📈 Generate detailed statistics - $(date -u +%Y-%m-%d)"
              ;;
          esac
          
          git push origin data
        fi

    - name: 📋 Action Summary
      run: |
        echo "## 🎯 Action Completed Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Action:** ${{ inputs.action }}" >> $GITHUB_STEP_SUMMARY
        echo "**Executed by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        case "${{ inputs.action }}" in
          "generate_exports")
            echo "### 📊 Generated Files:" >> $GITHUB_STEP_SUMMARY
            echo "- 📄 \`overview.html\` - Interactive member dashboard" >> $GITHUB_STEP_SUMMARY
            echo "- 📋 \`all_members.json\` - Complete member data" >> $GITHUB_STEP_SUMMARY
            echo "- 📊 \`all_members.csv\` - Excel-compatible export" >> $GITHUB_STEP_SUMMARY
            echo "- 📈 \`detailed_statistics.json\` - Comprehensive statistics" >> $GITHUB_STEP_SUMMARY
            ;;
          "clear_all_data")
            echo "### 🗑️ Data Cleared:" >> $GITHUB_STEP_SUMMARY
            echo "- All member files removed" >> $GITHUB_STEP_SUMMARY
            echo "- Export files cleared" >> $GITHUB_STEP_SUMMARY
            echo "- Deletion logged for audit trail" >> $GITHUB_STEP_SUMMARY
            ;;
          "backup_data")
            echo "### 💾 Backup Created:" >> $GITHUB_STEP_SUMMARY
            echo "- Location: \`data/backups/backup_$(date -u +%Y%m%d_%H%M%S)\`" >> $GITHUB_STEP_SUMMARY
            echo "- Includes all member data and exports" >> $GITHUB_STEP_SUMMARY
            ;;
        esac
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Access exports:** [View Data Branch](https://github.com/${{ github.repository }}/tree/data/exports)" >> $GITHUB_STEP_SUMMARY